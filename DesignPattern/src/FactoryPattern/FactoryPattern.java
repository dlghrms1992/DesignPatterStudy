package FactoryPattern;

/*
 * 느슨한 결합을 이요한느 객체지향 디자인
 * 팩토리패턴 -
 * 팩토리 메소드 패턴 - 팩토리 메소드 패턴에서는 객체를 생성하기 위한 인터페이스를 정의하는데 어떤 클래스의 인스턴스를 만들지는
 * 서브클래스에서 결하게 만듬, 팩토리 메소드 패턴을 이용하면 클래스의 인스턴스를 만드는 일을 서브클래스에 맡길수 있음.
 * 
 * 구상클래스의 인스턴스를 만드는ㄴ 부분을 전부 찾아내서 애플리케이션의 나머지 부분으로부터 분리/캡슐화시킬 수 있는 방법은? 객체에 팩토리를 만들자
 * 팩토리 패턴에서는 객체 생성을 캡슐화한다. 팩토리 메소드 패턴에 서브클래스에서 어떤 클래스를 만들지를 결정하게 함으로써 객체 생성을 캡슐화한다.
 * 제품, 생산자 두개의 클래스가 있다고 가정하면, 각 각의 클래스의 계층구도를 병렬적으로 나열해볼것
 */
public class FactoryPattern {


}
