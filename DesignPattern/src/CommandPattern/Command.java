package CommandPattern;
/**
 * 커맨드 패턴 - 커맨드 패턴을 이용하면 요구 사항을 객체로 캡슐화 할 수 있으며, 매개변수를 써서 여러 가지 다른 요구
 * 사항을 집어넣을 수도 있습니다. 또한 요청 내역을 큐에 저장하거나 로그로 기록 할 수 도 있으며, 작업취소 기능도 지원
 * @author HGLEE
 *
 * 객체지향 원칙 다시 정리
 * - 바뀌는 부분은 캡슐화하낟.
 * - 상속보다는 구성을 활용한다.
 * - 구현이 아닌 인터페이스에 맞춰서 프로그래밍한다.
 * - 서로 상호작용을 하는 객체 사이에서는 가능하면 느슨하게 결합하는 디잔인을 사용해야 한다.
 * - 클래스는 확장에 대해서는 열려 있지만 변경에 대해서는 닫혀 있어야한다.
 * - 추상화된 것에 의존하라. 구상 클래스에 의존하지 않도록  한다.
 */
public interface Command {
	public void execute();

}


