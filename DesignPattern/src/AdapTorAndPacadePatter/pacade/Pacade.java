package AdapTorAndPacadePatter.pacade;

/**
 * 어댑터 패턴과 퍼사드 패턴의 차이
 * 어댑터 패턴 - 인터페이스를 변경해서 클라이언트에서 필요로 하는 인터페이스로 적응시키기 위한 용도로 쓰임
 * 퍼사드 패턴 - 어떤 서브시템에 대한 간단한 인터페이스를 제공하기 위한 용도
 * 
 * 퍼사드 패턴 - 어떤 서브시템의 일련의 인터페이스에 대한 통합된 인터페이스를 제공합니다. 퍼사드에서 고수준 인터페이스를 정의하기 때문에 서브시스템을 더 쉽게 사용할 수 있습니다.
 * 디자인 원칙 - 최소 지식 원칙 - 정말 친한 친구하고만 얘기하라. 참고 데메테르의 법칙
 * - 어떤 객체든 그 객체와 상호작용을 하는 클래스의 개수에 주의해야 하며, 그런 객체들과 어떤 식으로 상호작용을 하는지에도 주의를 기울여야 한다는 뜻입니다.
 * @author HGLEE
 *
 */
public class Pacade {
//	HomeTheaterFacade homeTheaterFacade = new HomeTheaterFacade(amp, tuner, dvd, cd, projector, lights, screen, popper);
//	homeTheaterFacade.watchMovie("movieName");
//	homeTheaterFacade.endMovie();
	
}
